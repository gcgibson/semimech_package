lines(hhs[hhs$state == "CA" & hhs$date %in% date_for_plot,]$previous_day_admission_influenza_confirmed/100,type='l',col='red')
plot(wave_mat[1,1:100])
lines(hhs[hhs$state == "CA" & hhs$date %in% date_for_plot,]$previous_day_admission_influenza_confirmed/100,type='l',col='red')
plot(wave_mat[2,1:100],type='l')
lines(hhs[hhs$state == "CA" & hhs$date %in% date_for_plot,]$previous_day_admission_influenza_confirmed/100,type='l',col='red')
plot(wave_mat[2,1:100],type='l')
lines(hhs[hhs$state == "CA" & hhs$date %in% date_for_plot,]$previous_day_admission_influenza_confirmed/100,type='l',col='red')
plot(wave_mat[10,1:100],type='l')
lines(hhs[hhs$state == "CA" & hhs$date %in% date_for_plot,]$previous_day_admission_influenza_confirmed/100,type='l',col='red')
plot(wave_mat[10,1:100],type='l')
lines(hhs[hhs$state == "CA" & hhs$date %in% date_for_plot,]$previous_day_admission_influenza_confirmed/80,type='l',col='red')
plot(wave_mat[10,1:100],type='l')
lines(hhs[hhs$state == "CA" & hhs$date %in% date_for_plot,]$previous_day_admission_influenza_confirmed/120,type='l',col='red')
plot(wave_mat[10,10:100],type='l')
plot(wave_mat[10,10:100],type='l')
lines(hhs[hhs$state == "CA" & hhs$date %in% date_for_plot,]$previous_day_admission_influenza_confirmed/120,type='l',col='red')
install.packages("ExpertChoice")
library(ExpertChoice)
lab45 <- list(
beef = c("1","2","3","4"),
price = c("1","2","3","4","5")
)
lab45
lab45 <- list(
beef = c("1","2","3","4"),
price = c("1","2","3","4","5")
)
lab45
ff_lab <- full_factorial(lab45)
ff_lab
atttravel <- list(
airfaire = c("0", "1"),
travel_time = c("0", "1", "2")
)
# Step 1
travel2131 <- full_factorial(atttravel)
travel2131
2*3
lab45 <- list(
beef = c("1","2","3","4"),
price = c("1","2","3","4","5")
)
ff_lab <- full_factorial(lab45)
ff_lab
4*5
ff_lab <- full_factorial(lab45)
ff_lab
lab45 <- list(
price = c("1","2","3","4","5"),
beef = c("1","2","3","4")
)
ff_lab <- full_factorial(lab45)
ff_lab
aff_lab <- augment_levels(ff_lab)
aff_lab
atttravel <- list(
airfaire = c("0", "1"),
travel_time = c("0", "1", "2")
)
# Step 1
travel2131 <- full_factorial(atttravel)
# Step 2
aff_travel2131 <- augment_levels(travel2131)
aff_travel2131
aff_lab <- augment_levels(ff_lab)
aff_lab
nlevels <- unlist(purrr::map(ff_lab, function(x){length(levels(x))}))
nlevels
nlevels <- lapply(lab45, function(x){length(levels(x))}))
nlevels <- lapply(lab45, function(x){length(levels(x))})
nlevels
nlevels <- lapply(lab45, function(x){length(x))})
nlevels <- lapply(lab45, function(x){length(x)})
nlevels
nlevels <- unlist(lapply(lab45, function(x){length(x)}))
nlevels
nlevels
?oa.design
fractional_factorial_45 <- DoE.base::oa.design(nlevels = nlevels, columns = "min34")
fractional_factorial_45
nlevels
nlevels
fractional_factorial_45 <- DoE.base::oa.design(nlevels = nlevels, columns = "order")
fractional_factorial_45
fractional_factorial_45
ff_lab
fractional_factorial_45 <- search_design(~ beef + price, ff_lab)
type(fractional_factorial_45)
typeof(fractional_factorial_45)
fractional_factorial_45 <- DoE.base::oa.design(nlevels = nlevels, columns = "order")
fractional_factorial_45 <- DoE.base::oa.design(nlevels = nlevels, columns = "min3.rela")
fractional_factorial_45
fractional_factorial_45 <- DoE.base::oa.design(nlevels = nlevels, columns = "min34")
colnames(fractional_factorial_45) <- colnames(ff_lab)
fractional_factorial_45 <- search_design(~ beef + price, fractional_factorial_45)
search_design
?search_design
fractional_factorial_45 <- search_design(ff_lab, fractional_factorial_45)
fractional_factorial_45
ff_lab
fractional_factorial_45
row1_main_efffects <- fractional_factorial_efficiency(~ beef + price, fractional_factorial_45)
dce_modulo_examp2 <- modulo_method(
fractional_factorial_45,
list(c(3,1), c(2.5), c(4,3))
)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(1,0), c(0,1))
)
dce_modulo_examp1
?modulo_method
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(1,0), c(0,1,1))
)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(1,0), c(1,1))
)
dce_modulo_examp1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(1,0))
)
dce_modulo_examp1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(1))
)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(1,1))
)
dce_modulo_examp1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(0,1))
)
dce_modulo_examp1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(0,2))
)
dce_modulo_examp1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(0,10000))
)
dce_modulo_examp1
aff_lab
beef_price_table <- construct_question_frame(aff_lab, fractional_factorial_45)
beef_price_table
beef_price_table <- construct_question_frame(aff_lab, dce_modulo_examp2)
dce_efficiency_choices_example1 <- dce_efficiency(aff_lab, dce_modulo_examp1)
dce_efficiency_choices_example1
beef_price_table <- construct_question_frame(aff_lab, dce_modulo_examp2)
beef_price_table <- construct_question_frame(aff_lab, dce_modulo_examp1)
beef_price_table
nrow(beef_price_table)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(0,1),c(0,1),c(0,1),c(0,1))
)
beef_price_table <- construct_question_frame(aff_lab, dce_modulo_examp1)
beef_price_table
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(0,1),c(0,1))
)
beef_price_table <- construct_question_frame(aff_lab, dce_modulo_examp1)
beef_price_table
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(0,1))
)
beef_price_table <- construct_question_frame(aff_lab, dce_modulo_examp1)
beef_price_table
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
list(c(1))
)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45
)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = c(0,0)
)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,0))
)
beef_price_table <- construct_question_frame(aff_lab, dce_modulo_examp1)
levels(beef_price_table$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table$price) <- c(".30", ".45", ".60", ".75", ".90")
beef_price_table
beef_price_table %>% order_by(beef)
?order_by
order_by(beef_price_table,beef)
beef_price_table %>% arrange(beef)
beef_price_table %>% arrange(question)
beef_price_table %>% arrange(price)
beef_price_table <- construct_question_frame(aff_lab, dce_modulo_examp1)
beef_price_table
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1))
)
beef_price_table2 <- construct_question_frame(aff_lab, dce_modulo_examp1)
beef_price_table1 == beef_price_table2
beef_price_table
View(beef_price_table)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1))
)
fractional_factorial_45
nrow(fractional_factorial_45)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1))
)
nrow(dce_modulo_examp1)
dce_modulo_examp1
dce_modulo_examp1[[1]]
length(dce_modulo_examp1)
beef_price_table1 <- construct_question_frame(aff_lab, fractional_factorial_45)
levels(beef_price_table$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table$price) <- c(".30", ".45", ".60", ".75", ".90")
beef_price_table %>% arrange(price)
nrow(beef_price_table)
fractional_factorial_45
aff_lab
beef_price_table1 <- construct_question_frame(aff_lab, fractional_factorial_45)
beef_price_table1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1))
)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(1))
)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
?modulo_method
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list()
)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1))
)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
undup <- beef_price_table1 %>% select(beef,price)
undup
unique(undup)
undup <- beef_price_table1 %>% select(beef,price,questions,levels)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
undup <- beef_price_table1 %>% select(beef,price,questions,levels)
undup <- beef_price_table1 %>% select(beef,price,question,levels)
unique(undup)
undup <- beef_price_table1 %>% select(beef,price,levels)
unique(undup)
levels(undup$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(undup$price) <- c(".30", ".45", ".60", ".75", ".90")
undup
beef_price_table %>% arrange(beef)
beef_price_table %>% arrange(price)
undup %>% arrange(price)
undup <- beef_price_table1 %>% select(beef,price)
undup <- unique(undup)
levels(undup$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(undup$price) <- c(".30", ".45", ".60", ".75", ".90")
undup %>% arrange(price)
undup$beef
ff_lab
undup %>% arrange(price)
undup %>% arrange(price,.by_group = T)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1))
)
dce_modulo_examp1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1,1,1))
)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1),c(0,1))
)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
dce_modulo_examp1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1),c(0,1),c(0,1))
)
dce_modulo_examp1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1),c(0,2),c(0,3),c(0,4))
)
dce_modulo_examp1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(,c(0,2),c(0,3),c(0,4))
)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,2),c(0,3),c(0,4))
)
dce_modulo_examp1
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(0,1),c(0,2),c(0,3))
)
dce_modulo_examp1
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
levels(beef_price_table1$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table1$price) <- c(".30", ".45", ".60", ".75", ".90")
beef_price_table1
View(beef_price_table1)
View(beef_price_table1 %>% arrange(beef))
View(beef_price_table1 %>% arrange(levels(beef)))
View(beef_price_table1 %>% arrange(.by_group = levels(beef)))
View(beef_price_table1 %>% arrange(.by_group =T))
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(1,1),c(1,2),c(1,3))
)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
View(beef_price_table1)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(1,1),c(2,2),c(3,3))
)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
levels(beef_price_table1$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table1$price) <- c(".30", ".45", ".60", ".75", ".90")
View(beef_price_table1)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(2,1),c(2,2),c(2,3))
)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
levels(beef_price_table1$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table1$price) <- c(".30", ".45", ".60", ".75", ".90")
View(beef_price_table1)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(1,1),c(2,2),c(3,3))
)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
levels(beef_price_table1$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table1$price) <- c(".30", ".45", ".60", ".75", ".90")
View(beef_price_table1)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(sample(1:5,1),1),c(sample(1:5,1),2),c(sample(1:5,1),3))
)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
levels(beef_price_table1$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table1$price) <- c(".30", ".45", ".60", ".75", ".90")
View(beef_price_table1)
length(dce_modulo_examp1)
beef_price_table1
tmp <- modulo_method(
fractional_factorial_45,
generators = list(c(sample(1:5,1),1),c(sample(1:5,1),2),c(sample(1:5,1),3)))
rbind(tmp,dce_modulo_examp1)
dce_modulo_examp1 <- rbind(tmp,dce_modulo_examp1)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(sample(1:5,1),1),c(sample(1:5,1),2),c(sample(1:5,1),3))
)
for (i in 1:100){
tmp <- modulo_method(
fractional_factorial_45,
generators = list(c(sample(1:5,1),1),c(sample(1:5,1),2),c(sample(1:5,1),3)))
dce_modulo_examp1 <- rbind(tmp,dce_modulo_examp1)
}
dce_modulo_examp1
length(dce_modulo_examp1)
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
levels(beef_price_table1$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table1$price) <- c(".30", ".45", ".60", ".75", ".90")
View(beef_price_table1)
View(beef_price_table1[sample(1:nrow(beef_price_table1),10)])
sample(1:nrow(beef_price_table1),10)
View(beef_price_table1[sample(1:nrow(beef_price_table1),10),])
View(beef_price_table1)
question_idx <- sample(1:nrow(beef_price_table1),10)
question_idx
question_idx:(question_idx+4)
question_idx
test <- beef_price_table1[1,]
test <- beef_price_table1[1,]
for (q in question_idx){
test <- rbind(test,beef_price_table1[q:(q+3)])
}
test <- beef_price_table1[1,]
for (q in question_idx){
test <- rbind(test,beef_price_table1[q:(q+3),])
}
test <- test[2:nrow(test),]
View(test)
question_idx <- sample(1:nrow(beef_price_table1),100)
question_idx
question_idx %% 4
question_idx[which(question_idx %% 4 == 0)]
question_idx <- question_idx[which(question_idx %% 4 == 0)][1:10]
test <- beef_price_table1[1,]
for (q in question_idx){
test <- rbind(test,beef_price_table1[q:(q+3),])
}
test <- test[2:nrow(test),]
View(test)
test <- beef_price_table1[1,]
for (q in question_idx){
test <- rbind(test,beef_price_table1[*q+1):(q+4),])
}
test <- beef_price_table1[1,]
for (q in question_idx){
test <- rbind(test,beef_price_table1[(q+1):(q+4),])
}
test <- test[2:nrow(test),]
View(test)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(sample(0:4,1),1),c(sample(0:4,1),2),c(sample(0:4,1),3))
)
for (i in 1:100){
tmp <- modulo_method(
fractional_factorial_45,
generators = list(c(sample(0:4,1),1),c(sample(0:4,1),2),c(sample(0:4,1),3)))
dce_modulo_examp1 <- rbind(tmp,dce_modulo_examp1)
}
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
levels(beef_price_table1$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table1$price) <- c(".30", ".45", ".60", ".75", ".90")
question_idx <- sample(1:nrow(beef_price_table1),100)
question_idx <- question_idx[which(question_idx %% 4 == 0)][1:10]
test <- beef_price_table1[1,]
for (q in question_idx){
test <- rbind(test,beef_price_table1[(q+1):(q+4),])
}
test <- test[2:nrow(test),]
View(test)
.8^4
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(sample(0:4,1),1),c(sample(0:4,1),2),c(sample(0:4,1),3))
)
for (i in 1:100){
tmp <- modulo_method(
fractional_factorial_45,
generators = list(c(sample(0:4,1),1),c(sample(0:4,1),2),c(sample(0:4,1),3)))
dce_modulo_examp1 <- rbind(tmp,dce_modulo_examp1)
}
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
levels(beef_price_table1$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table1$price) <- c(".30", ".45", ".60", ".75", ".90")
question_idx <- sample(1:nrow(beef_price_table1),100)
question_idx <- question_idx[which(question_idx %% 4 == 0)][1:10]
test <- beef_price_table1[1,]
for (q in question_idx){
test <- rbind(test,beef_price_table1[(q+1):(q+4),])
}
test <- test[2:nrow(test),]
View(test)
generate_n_choice_sets <- function(n){
lab45 <- list(
price = c("1","2","3","4","5"),
beef = c("1","2","3","4")
)
ff_lab <- full_factorial(lab45)
aff_lab <- augment_levels(ff_lab)
nlevels <- unlist(lapply(lab45, function(x){length(x)}))
nlevels
fractional_factorial_45 <- DoE.base::oa.design(nlevels = nlevels, columns = "min34")
colnames(fractional_factorial_45) <- colnames(ff_lab)
#fractional_factorial_45 <- search_design(~ beef + price, fractional_factorial_45)
fractional_factorial_45 <- search_design(ff_lab, fractional_factorial_45)
row1_main_efffects <- fractional_factorial_efficiency(~ beef + price, fractional_factorial_45)
dce_modulo_examp1 <- modulo_method(
fractional_factorial_45,
generators = list(c(sample(0:4,1),1),c(sample(0:4,1),2),c(sample(0:4,1),3))
)
for (i in 1:100){
tmp <- modulo_method(
fractional_factorial_45,
generators = list(c(sample(0:4,1),1),c(sample(0:4,1),2),c(sample(0:4,1),3)))
dce_modulo_examp1 <- rbind(tmp,dce_modulo_examp1)
}
beef_price_table1 <- construct_question_frame(aff_lab, dce_modulo_examp1)
levels(beef_price_table1$beef) <- c("tradtional", "lcb", "organic", "plant")
levels(beef_price_table1$price) <- c(".30", ".45", ".60", ".75", ".90")
question_idx <- sample(1:nrow(beef_price_table1),100*n)
question_idx <- question_idx[which(question_idx %% 4 == 0)][1:n]
test <- beef_price_table1[1,]
for (q in question_idx){
test <- rbind(test,beef_price_table1[(q+1):(q+4),])
}
test <- test[2:nrow(test),]
return (test)
}
test <- generate_n_choice_sets(20)
View(test)
